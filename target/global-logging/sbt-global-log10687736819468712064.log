[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.14)
[debug]       Load.loadUnit: plugins took 73.6025ms
[debug]       Load.loadUnit: defsScala took 0.213699ms
[debug] [Loading] Scanning directory C:\Users\weple\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.2342 ms
[debug]           Load.resolveProject(global-plugins) took 38.0211ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\weple\.sbt\1.0\plugins, plugins: List(<none>))) took 74.025399ms
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.7082ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.179601ms
[debug]     Load.loadUnit(file:/C:/Users/weple/.sbt/1.0/plugins/, ...) took 172.3874ms
[debug]   Load.apply: load took 320.4349ms
[debug]   Load.apply: resolveProjects took 4.410399ms
[debug]   Load.apply: finalTransforms took 52.7302ms
[debug]   Load.apply: config.delegates took 5.8487ms
[debug]   Load.apply: Def.make(settings)... took 392.7654ms
[debug]   Load.apply: structureIndex took 95.748ms
[debug]   Load.apply: mkStreams took 1.4687ms
[info] loading global plugins from C:\Users\weple\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2754.268499ms
[debug]           Load.loadUnit: plugins took 17.346601ms
[debug]           Load.loadUnit: defsScala took 0.003101ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1\project
[debug]             Load.loadUnit: mkEval took 5.977299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5864 ms
[info] loading settings for project project1-build from idea3.sbt ...
[debug]               Load.resolveProject(project1-build) took 3.0835ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project1-build, base: C:\Users\weple\IdeaProjects\Project1\project, plugins: List(<none>))) took 5.0823ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: (project1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1824.3076ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5894ms
[debug]         Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/project/, ...) took 1847.0572ms
[debug]       Load.apply: load took 1848.023ms
[debug]       Load.apply: resolveProjects took 0.0975ms
[debug]       Load.apply: finalTransforms took 6.506799ms
[debug]       Load.apply: config.delegates took 0.3386ms
[debug]       Load.apply: Def.make(settings)... took 64.450101ms
[debug]       Load.apply: structureIndex took 28.3597ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\weple\IdeaProjects\Project1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3875.2614ms
[debug]     Load.loadUnit: defsScala took 0.002199ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1
[debug]       Load.loadUnit: mkEval took 0.2561ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.406201 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.7357ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\weple\IdeaProjects\Project1, plugins: List(<none>))) took 31.6233ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1090.987ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.0056ms
[debug]   Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/, ...) took 4975.8331ms
[debug] Load.apply: load took 4977.115ms
[debug] Load.apply: resolveProjects took 0.1081ms
[debug] Load.apply: finalTransforms took 20.744299ms
[debug] Load.apply: config.delegates took 0.2119ms
[debug] Load.apply: Def.make(settings)... took 62.1771ms
[debug] Load.apply: structureIndex took 14.952801ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57085 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57085, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(idea-shell, None, None)
