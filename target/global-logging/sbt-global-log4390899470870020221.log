[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.14)
[debug]       Load.loadUnit: plugins took 85.3493ms
[debug]       Load.loadUnit: defsScala took 0.2725ms
[debug] [Loading] Scanning directory C:\Users\weple\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.053 ms
[debug]           Load.resolveProject(global-plugins) took 45.0588ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\weple\.sbt\1.0\plugins, plugins: List(<none>))) took 87.5959ms
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.1738ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2823ms
[debug]     Load.loadUnit(file:/C:/Users/weple/.sbt/1.0/plugins/, ...) took 201.4501ms
[debug]   Load.apply: load took 381.3796ms
[debug]   Load.apply: resolveProjects took 5.1691ms
[debug]   Load.apply: finalTransforms took 55.2737ms
[debug]   Load.apply: config.delegates took 6.8251ms
[debug]   Load.apply: Def.make(settings)... took 412.0297ms
[debug]   Load.apply: structureIndex took 85.0087ms
[debug]   Load.apply: mkStreams took 1.621ms
[info] loading global plugins from C:\Users\weple\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2271.619ms
[debug]           Load.loadUnit: plugins took 17.9076ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1\project
[debug]             Load.loadUnit: mkEval took 5.1027ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3875 ms
[info] loading settings for project project1-build from idea7.sbt ...
[debug]               Load.resolveProject(project1-build) took 2.9736ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project1-build, base: C:\Users\weple\IdeaProjects\Project1\project, plugins: List(<none>))) took 4.7994ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: (project1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 105.6128ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.7666ms
[debug]         Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/project/, ...) took 128.0387ms
[debug]       Load.apply: load took 129.1059ms
[debug]       Load.apply: resolveProjects took 0.0824ms
[debug]       Load.apply: finalTransforms took 6.5865ms
[debug]       Load.apply: config.delegates took 0.2346ms
[debug]       Load.apply: Def.make(settings)... took 57.1027ms
[debug]       Load.apply: structureIndex took 22.5012ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\weple\IdeaProjects\Project1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 428.1866ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1
[debug]       Load.loadUnit: mkEval took 0.1705ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.615 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 30.0251ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\weple\IdeaProjects\Project1, plugins: List(<none>))) took 33.4023ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1839.6658ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.4851ms
[debug]   Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/, ...) took 2274.8587ms
[debug] Load.apply: load took 2276.0435ms
[debug] Load.apply: resolveProjects took 0.0735ms
[debug] Load.apply: finalTransforms took 19.6601ms
[debug] Load.apply: config.delegates took 0.2522ms
[debug] Load.apply: Def.make(settings)... took 51.3967ms
[debug] Load.apply: structureIndex took 16.8232ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57085 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57085, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(idea-shell, None, None)
