[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\weple\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.14)
[debug]       Load.loadUnit: plugins took 77.8121ms
[debug]       Load.loadUnit: defsScala took 0.225199ms
[debug] [Loading] Scanning directory C:\Users\weple\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.9755 ms
[debug]           Load.resolveProject(global-plugins) took 44.425301ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\weple\.sbt\1.0\plugins, plugins: List(<none>))) took 80.0591ms
[debug] [Loading] Done in C:\Users\weple\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 99.3464ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2181ms
[debug]     Load.loadUnit(file:/C:/Users/weple/.sbt/1.0/plugins/, ...) took 185.038901ms
[debug]   Load.apply: load took 339.623299ms
[debug]   Load.apply: resolveProjects took 5.180301ms
[debug]   Load.apply: finalTransforms took 50.247601ms
[debug]   Load.apply: config.delegates took 11.282701ms
[debug]   Load.apply: Def.make(settings)... took 367.610599ms
[debug]   Load.apply: structureIndex took 90.998599ms
[debug]   Load.apply: mkStreams took 1.455701ms
[info] loading global plugins from C:\Users\weple\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2209.4002ms
[debug]           Load.loadUnit: plugins took 19.2602ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1\project
[debug]             Load.loadUnit: mkEval took 5.2438ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1968 ms
[info] loading settings for project project1-build from idea9.sbt ...
[debug]               Load.resolveProject(project1-build) took 10.092899ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project1-build, base: C:\Users\weple\IdeaProjects\Project1\project, plugins: List(<none>))) took 18.2171ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1\project, returning: (project1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 148.711299ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.5134ms
[debug]         Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/project/, ...) took 172.482299ms
[debug]       Load.apply: load took 173.9328ms
[debug]       Load.apply: resolveProjects took 0.1789ms
[debug]       Load.apply: finalTransforms took 8.247401ms
[debug]       Load.apply: config.delegates took 0.2934ms
[debug]       Load.apply: Def.make(settings)... took 59.382599ms
[debug]       Load.apply: structureIndex took 22.546401ms
[debug]       Load.apply: mkStreams took 0.0017ms
[info] loading project definition from C:\Users\weple\IdeaProjects\Project1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 476.2649ms
[debug]     Load.loadUnit: defsScala took 0.002501ms
[debug] [Loading] Scanning directory C:\Users\weple\IdeaProjects\Project1
[debug]       Load.loadUnit: mkEval took 0.2176ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.308401 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.598299ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\weple\IdeaProjects\Project1, plugins: List(<none>))) took 30.4162ms
[debug] [Loading] Done in C:\Users\weple\IdeaProjects\Project1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1581.073099ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.2045ms
[debug]   Load.loadUnit(file:/C:/Users/weple/IdeaProjects/Project1/, ...) took 2062.115ms
[debug] Load.apply: load took 2063.3523ms
[debug] Load.apply: resolveProjects took 0.069399ms
[debug] Load.apply: finalTransforms took 21.1668ms
[debug] Load.apply: config.delegates took 0.2874ms
[debug] Load.apply: Def.make(settings)... took 56.543299ms
[debug] Load.apply: structureIndex took 18.9521ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57085 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57085, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project1 (in build file:/C:/Users/weple/IdeaProjects/Project1/)
[debug] > Exec(idea-shell, None, None)
